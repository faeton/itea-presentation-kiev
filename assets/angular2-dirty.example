var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
define(["require", "exports", "@angular/core", "@angular-redux/store", "../actions/counter-actions", "../services/random-number"], function (require, exports, core_1, store_1, counter_actions_1, random_number_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Counter = (function () {
        function Counter(actions) {
            this.actions = actions;
        }
        return Counter;
    }());
    __decorate([
        store_1.select('counter')
    ], Counter.prototype, "counter$", void 0);
    Counter = __decorate([
        core_1.Component({
            selector: 'counter',
            providers: [counter_actions_1.CounterActions, random_number_1.RandomNumberService],
            template: "\n  <p>\n    Clicked: {{ counter$ | async }} times\n    <button (click)=\"actions.increment()\">+</button>\n    <button (click)=\"actions.decrement()\">-</button>\n    <button (click)=\"actions.incrementIfOdd()\">Increment if odd</button>\n    <button (click)=\"actions.incrementAsync(2222)\">Increment async</button>\n    <button (click)=\"actions.randomize()\">Set to random number</button>\n  </p>\n  "
        })
    ], Counter);
    exports.Counter = Counter;
});